# Generated by Django 4.2.7 on 2025-07-02 18:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="SystemMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("total_users", models.IntegerField(default=0)),
                ("active_users", models.IntegerField(default=0)),
                ("new_users", models.IntegerField(default=0)),
                ("premium_users", models.IntegerField(default=0)),
                ("total_conversations", models.IntegerField(default=0)),
                ("total_messages", models.IntegerField(default=0)),
                ("total_files", models.IntegerField(default=0)),
                ("total_storage_used", models.BigIntegerField(default=0)),
                ("avg_response_time", models.FloatField(default=0.0)),
                ("total_api_calls", models.IntegerField(default=0)),
                ("error_rate", models.FloatField(default=0.0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("new_subscriptions", models.IntegerField(default=0)),
                ("cancelled_subscriptions", models.IntegerField(default=0)),
                ("uptime_percentage", models.FloatField(default=100.0)),
                ("custom_metrics", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "system_metrics",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(fields=["date"], name="system_metr_date_3bfe9f_idx")
                ],
                "unique_together": {("date",)},
            },
        ),
        migrations.CreateModel(
            name="FeatureUsage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("feature_name", models.CharField(max_length=100)),
                ("feature_category", models.CharField(max_length=50)),
                ("total_uses", models.IntegerField(default=0)),
                ("unique_users", models.IntegerField(default=0)),
                ("date", models.DateField()),
                ("usage_data", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "feature_usage",
                "ordering": ["-date", "feature_name"],
                "indexes": [
                    models.Index(
                        fields=["feature_name", "date"],
                        name="feature_usa_feature_8b1249_idx",
                    ),
                    models.Index(
                        fields=["feature_category", "date"],
                        name="feature_usa_feature_3f9deb_idx",
                    ),
                    models.Index(fields=["date"], name="feature_usa_date_6a9d48_idx"),
                ],
                "unique_together": {("feature_name", "date")},
            },
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("login_count", models.IntegerField(default=0)),
                ("chat_messages_sent", models.IntegerField(default=0)),
                ("files_uploaded", models.IntegerField(default=0)),
                ("files_downloaded", models.IntegerField(default=0)),
                ("pages_visited", models.IntegerField(default=0)),
                ("api_calls_made", models.IntegerField(default=0)),
                ("total_session_time", models.IntegerField(default=0)),
                ("active_time", models.IntegerField(default=0)),
                ("features_used", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_activities",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["user", "date"], name="user_activi_user_id_ba5a01_idx"
                    ),
                    models.Index(fields=["date"], name="user_activi_date_322354_idx"),
                ],
                "unique_together": {("user", "date")},
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("user_activity", "User Activity Report"),
                            ("system_performance", "System Performance Report"),
                            ("revenue", "Revenue Report"),
                            ("content_usage", "Content Usage Report"),
                            ("error_analysis", "Error Analysis Report"),
                            ("custom", "Custom Report"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "report_format",
                    models.CharField(
                        choices=[
                            ("json", "JSON"),
                            ("csv", "CSV"),
                            ("pdf", "PDF"),
                            ("excel", "Excel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("filters", models.JSONField(blank=True, default=dict)),
                ("parameters", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("generating", "Generating"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("progress", models.IntegerField(default=0)),
                ("data", models.JSONField(blank=True, default=dict)),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "requested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requested_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "reports",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["requested_by", "created_at"],
                        name="reports_request_48ecc7_idx",
                    ),
                    models.Index(
                        fields=["report_type", "status"],
                        name="reports_report__f9d8bf_idx",
                    ),
                    models.Index(fields=["status"], name="reports_status_e83c1d_idx"),
                    models.Index(
                        fields=["start_date", "end_date"],
                        name="reports_start_d_c81075_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("debug", "Debug"),
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("exception_type", models.CharField(blank=True, max_length=100)),
                ("stack_trace", models.TextField(blank=True)),
                ("url", models.URLField(blank=True, max_length=500)),
                ("method", models.CharField(blank=True, max_length=10)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("context", models.JSONField(blank=True, default=dict)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_errors",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="error_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "error_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["level", "created_at"],
                        name="error_logs_level_7f3e1a_idx",
                    ),
                    models.Index(
                        fields=["is_resolved", "created_at"],
                        name="error_logs_is_reso_ecfb8a_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="error_logs_user_id_71f3b9_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="error_logs_created_008b9a_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("user_login", "User Login"),
                            ("user_logout", "User Logout"),
                            ("user_register", "User Registration"),
                            ("chat_message", "Chat Message"),
                            ("file_upload", "File Upload"),
                            ("file_download", "File Download"),
                            ("file_share", "File Share"),
                            ("subscription_upgrade", "Subscription Upgrade"),
                            ("subscription_cancel", "Subscription Cancel"),
                            ("page_view", "Page View"),
                            ("api_call", "API Call"),
                            ("error_occurred", "Error Occurred"),
                            ("feature_used", "Feature Used"),
                        ],
                        max_length=50,
                    ),
                ),
                ("event_name", models.CharField(max_length=100)),
                ("event_description", models.TextField(blank=True)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("referer", models.URLField(blank=True, max_length=500)),
                ("properties", models.JSONField(blank=True, default=dict)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="analytics_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_events",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "created_at"],
                        name="analytics_e_event_t_c3dcde_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="analytics_e_user_id_7e4ee5_idx",
                    ),
                    models.Index(
                        fields=["session_id"], name="analytics_e_session_b3cbf5_idx"
                    ),
                    models.Index(
                        fields=["ip_address"], name="analytics_e_ip_addr_327ff6_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="analytics_e_created_3bce1d_idx"
                    ),
                ],
            },
        ),
    ]
